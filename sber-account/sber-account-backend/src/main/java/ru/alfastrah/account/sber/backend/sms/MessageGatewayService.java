package ru.alfastrah.account.sber.backend.sms;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 2.6.0.redhat-60024
 * 2018-04-05T18:50:33.590+04:00
 * Generated source version: 2.6.0.redhat-60024
 * 
 */
@WebServiceClient(name = "MessageGatewayService",
                  wsdlLocation = "file:/C:/D/interplat/JBossFuse6/model-message-gateway/src/main/resources/META-INF/message-gateway-wsdl/MessageGateway.wsdl",
                  targetNamespace = "http://schemas.alfastrah.ru/interplat4/ws-message-gateway-1.0") 
public class MessageGatewayService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://schemas.alfastrah.ru/interplat4/ws-message-gateway-1.0", "MessageGatewayService");
    public final static QName MessageGatewayPort = new QName("http://schemas.alfastrah.ru/interplat4/ws-message-gateway-1.0", "MessageGatewayPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/D/interplat/JBossFuse6/model-message-gateway/src/main/resources/META-INF/message-gateway-wsdl/MessageGateway.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(MessageGatewayService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/D/interplat/JBossFuse6/model-message-gateway/src/main/resources/META-INF/message-gateway-wsdl/MessageGateway.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public MessageGatewayService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public MessageGatewayService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MessageGatewayService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public MessageGatewayService(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public MessageGatewayService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public MessageGatewayService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns MessageGatewayPort
     */
    @WebEndpoint(name = "MessageGatewayPort")
    public MessageGatewayPort getMessageGatewayPort() {
        return super.getPort(MessageGatewayPort, MessageGatewayPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MessageGatewayPort
     */
    @WebEndpoint(name = "MessageGatewayPort")
    public MessageGatewayPort getMessageGatewayPort(WebServiceFeature... features) {
        return super.getPort(MessageGatewayPort, MessageGatewayPort.class, features);
    }

}
